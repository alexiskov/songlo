// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "personal",
            "url": "http://www.youtube.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addsong": {
            "post": {
                "consumes": [
                    "application/vnd.api+json"
                ],
                "summary": "create song data",
                "parameters": [
                    {
                        "description": "create a new song",
                        "name": "SongDetailEntity",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/htpsrv.SongDetailEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "is ok"
                    },
                    "400": {
                        "description": "no body response data"
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "summary": "delete song by id",
                "parameters": [
                    {
                        "description": "song id",
                        "name": "URLQuerySongParamsEntity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/htpsrv.URLQuerySongParamsEntity"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "no body of respose data"
                    }
                }
            }
        },
        "/getAllTxt": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "summary": "get query to song text",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pagination num of page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "no body of respose data"
                    }
                }
            }
        },
        "/info": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "summary": "get query song inf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "format 02.01.2006",
                        "name": "releaseDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "some text for by couplet search",
                        "name": "textFragment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pagination num of page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "no body of respose data"
                    }
                }
            }
        },
        "/updateSong": {
            "put": {
                "consumes": [
                    "application/vnd.api+json"
                ],
                "summary": "update song data",
                "parameters": [
                    {
                        "description": "any or all parameter updae",
                        "name": "SongDetailEntity",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/htpsrv.SongDetailEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "is ok"
                    },
                    "400": {
                        "description": "no body response data"
                    }
                }
            }
        }
    },
    "definitions": {
        "htpsrv.SongDetailEntity": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "htpsrv.URLQuerySongParamsEntity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.2",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "songlibs",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
